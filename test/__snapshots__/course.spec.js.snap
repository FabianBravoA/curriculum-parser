// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Course(path, cb) should have empty tags if not found 1`] = `
Object {
  "primary": Object {},
  "secondary": Object {},
}
`;

exports[`Course(path, cb) should parse grades (evaluación) section 1`] = `
Object {
  "log": Array [],
  "result": Object {
    "benchmarks": "<p>Cursos similares que sirven como referencia:</p>
<ul>
<li><a href=\\"http://shop.oreilly.com/product/0636920052463.do\\">Introduction to Functional Programming</a>,
How to Think Functionally in (Almost) Any Language, Barry Burd, November 2016,
O&#39;Reilly Media</li>
</ul>
",
    "books": "<ul>
<li><a href=\\"http://shop.oreilly.com/product/0636920028857.do\\">Functional JavaScript</a> de
Michael Fogus</li>
<li><a href=\\"http://eloquentjavascript.net/\\">Eloquent JavaScript</a></li>
</ul>
",
    "contributors": "<ul>
<li>Milton Mazzarri (autor)</li>
<li>Lupo Montero (coordinador)</li>
<li>Ana Rangel (colaboradora)</li>
</ul>
",
    "dependencies": "<p>Para poder llevar adelante este curso sin frustración, es recomendable los
siguientes conocimientos previos:</p>
<ul>
<li>Manejo de línea de comandos (*nix) y <code>git</code></li>
<li>Manejo básico de <code>npm</code></li>
<li>Debes haber completado el curso de <a href=\\"https://github.com/Laboratoria/curricula-js/tree/master/09-paradigms\\">paradigmas de programación</a>.</li>
</ul>
",
    "description": "<p>En este curso exploraremos el paradigma funcional en JavaScript as&#xED; como varios
patrones, t&#xE9;cnicas y convenciones asociadas a este paradigma, haciendo uso de
las nuevas caracter&#xED;sticas de ES2015.</p>
<p>La programaci&#xF3;n funcional es un paradigma de programaci&#xF3;n de suma relevancia hoy
en d&#xED;a, ya que se presta a resolver problemas de paralelizaci&#xF3;n, asincron&#xED;a y
programaci&#xF3;n reactiva entre otros. La programaci&#xF3;n funcional (<em>Functional
Programming</em> o FP por sus siglas en ingl&#xE9;s) no es realmente un paradigma nuevo,
existe desde hace medio siglo, pero recientemente, y en particular en el mundo
de JavaScript, se ha convertido en tanto una moda como una necesidad. Poco a
poco, desde la proliferaci&#xF3;n de librer&#xED;as como <a href=\\"http://underscorejs.org/\\">underscore</a> y <a href=\\"https://lodash.com/\\">lodash</a>,
despu&#xE9;s la adici&#xF3;n de <code>map()</code>, <code>filter()</code>, <code>reduce()</code> y compa&#xF1;&#xED;a, y ahora con
<em>frameworks</em> como <a href=\\"https://facebook.github.io/react/\\">React</a> y <a href=\\"http://redux.js.org/\\">Redux</a>, conocer el paradigma funcional y estilo
declarativo se han convertido en una necesidad para cualquier desarrollador de
JavaScript.</p>
<p>Familiarizarnos con la programci&#xF3;n funcional en JavaScript y ES2015 nos
permitir&#xE1; m&#xE1;s adelante desenvolvernos con naturalidad en React.</p>

",
    "grades": "<ul>
<li><strong>Ejercicios</strong>: Durante el curso completarás varios ejercicios en el LMS.
Estos ejercicios incluyen tests automatizados con la intención de dar feedback
immediato, pero los ejercicios en sí no serán calificados. Se elegirá uno o
dos ejercicios junto con el proyecto para la sesión de <em>code review</em>, que sí
será calificada.</li>
<li><strong>Cuestionarios</strong>: Al igual que los ejercicios, a lo largo del curso
responderás varios cuestionarios con feedback immediato, y éstos no cuentan
para la nota final.</li>
<li><strong>Proyecto</strong>: Antes de la sesión de <em>code review</em> y las demos, cada alumna
debe entregar (via pull request) el código de su proyecto. El proyecto incluye
refactorizar varios módulos de una base de código existente.</li>
<li><strong>Code review</strong>: <strong>(50%)</strong> La última semana del curso tendrás una sesión de
<em>code review</em> con uno de lxs instructorxs. En esta sesión se revisará el
código del proyecto así como uno o dos ejercicios realizados durante el curso.</li>
<li><strong>Demo</strong>: <strong>(50%)</strong> El curso cerrará con una demo en la que tendrás que
presentar al resto de la clase el trabajo realizado y lo aprendido en el
proyecto.</li>
</ul>
",
    "learningObjectives": "<ul>
<li>ES2015</li>
<li>Funciones puras</li>
<li>Inmutabilidad</li>
<li>Recursión</li>
<li><em>Higher Order Functions</em></li>
<li>Composición de funciones</li>
<li>Refactorización</li>
<li>Trabajo en equipo</li>
<li>Revisión en pares o <em>Peer-review</em></li>
<li>Github issues, branches, pull requests, entre otros.</li>
</ul>
",
    "order": 3,
    "product": "<ul>
<li>Refactorizar juego usado en lección 9 usando principios de programación
funcional, ES6 y añadiendo un conjunto de pruebas.</li>
<li>El &quot;proyecto&quot; está basado en iterar una aplicación existente y llevar a cabo
su siguiente release usando metodología ágil.</li>
</ul>
",
    "references": "<p>Capítulos de libros:</p>
<ul>
<li><a href=\\"http://eloquentjavascript.net/03_functions.html\\">Eloquent JavaScript - Chapter 3: Functions</a></li>
<li><a href=\\"http://eloquentjavascript.net/05_higher_order.html\\">Eloquent JavaScript - Chapter 5: Higher-Order Functions</a></li>
</ul>
<p>Blog posts:</p>
<ul>
<li><a href=\\"https://medium.com/javascript-scene/why-learn-functional-programming-in-javascript-composing-software-ea13afc7a257\\">Why Learn Functional Programming in JavaScript? (Composing Software)</a>,
Eric Elliott en Medium, Feb 20 2017</li>
<li><a href=\\"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0\\">Master the JavaScript Interview: What is Functional Programming?</a>,
Eric Elliott en Medium, Jan 3 2017</li>
<li><a href=\\"https://medium.freecodecamp.com/functional-programming-in-js-with-practical-examples-part-1-87c2b0dbc276\\">Functional Programming In JavaScript — With Practical Examples (Part 1)</a>,
Free Code Camp, @rajaraodv, Nov 14 2016</li>
<li><a href=\\"https://bethallchurch.github.io/JavaScript-and-Functional-Programming/\\">JavaScript and Functional Programming</a>,
Beth Allchurch, 29 of June, 2016</li>
<li><a href=\\"https://codewords.recurse.com/issues/one/an-introduction-to-functional-programming\\">An introduction to functional programming</a>,
Mary Rose Cook</li>
<li><a href=\\"https://medium.com/@y_kishino/functional-programming-in-javascript-part-2-78078df327a5\\">Functional Programming in Javascript (Part 2)</a>
<a href=\\"https://medium.com/@y_kishino\\">@yyyk</a>, Apr 16 2017 (needs review)</li>
<li><a href=\\"https://medium.com/@ryandrewjohnson/one-webpack-config-to-rule-them-all-environments-that-is-277457769779\\">One webpack config to rule them all — environments that is</a>,
<a href=\\"https://medium.com/@ryandrewjohnson\\">Ryan Johnson</a>, Feb 12 2017</li>
<li><a href=\\"https://medium.com/front-end-hacking/what-are-npm-yarn-babel-and-webpack-and-how-to-properly-use-them-d835a758f987\\">What are NPM, Yarn, Babel, and Webpack; and how to properly use them?</a>,
<a href=\\"https://medium.com/@gasim.appristas\\">Gasim Gasimzada</a>, May 9 2017 (needs review)</li>
</ul>
<p>Videos:</p>
<ul>
<li><a href=\\"https://www.youtube.com/playlist?list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84\\">Functional programming in JavaScript</a>,
Mattias Petter Johansson.</li>
<li><a href=\\"https://www.youtube.com/watch?v=e-5obm1G_FY\\">Learning Functional Programming with JavaScript</a>,
Anjana Vakil, JSUnconf 2016</li>
<li><a href=\\"https://www.youtube.com/watch?v=6Qx5ZAbfqjo\\">Functional programming and curry cooking in JS</a>,
Stefanie Schirmer, JSConf EU 2015</li>
<li><a href=\\"http://2014.jsconf.eu/speakers/james-coglan-practical-functional-programming-pick-two.html\\">Practical functional programming: pick two</a>,
James Coglan, JSConf EU 2014</li>
<li><a href=\\"https://vimeo.com/49384334\\">Pure JavaScript</a>, Christian Johansen (@cjno), Sep
13 2012</li>
</ul>
<p>Otros recursos:</p>
<ul>
<li><a href=\\"https://github.com/hemanth/functional-programming-jargon\\">Glosario de términos de programación funcional</a>,
@hemanth en GitHub.</li>
</ul>
",
    "slug": "course-with-grades",
    "syllabus": Array [
      Object {
        "bonus": false,
        "description": "<p>En esta unidad veremos dos de los principios fundamentales de la programación
funcional: cómo evitar el estado compartido usando <strong>funciones puras</strong> y el
concepto de <strong>inmutabilidad</strong>. La duración estimada de esta unidad es de <em>3h</em>.</p>
",
        "href": "01-state",
        "parts": Array [
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 0,
            "title": "Apertura",
            "type": "seminario",
          },
          Object {
            "duration": 30,
            "format": "self-paced",
            "order": 1,
            "title": "Funciones puras",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 2,
            "title": "Ejercicios de funciones puras",
            "type": "practice",
          },
          Object {
            "duration": 30,
            "format": "self-paced",
            "order": 3,
            "title": "Inmutabilidad",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 4,
            "title": "Ejercicios de inmutabilidad",
            "type": "practice",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 5,
            "title": "Cuestionario",
            "type": "quiz",
          },
          Object {
            "duration": 45,
            "format": "guiado",
            "order": 6,
            "title": "Solucionarios y ejercicios guiados",
            "type": "seminario",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 7,
            "title": "Cuestionario",
            "type": "quiz",
          },
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 8,
            "title": "Cierre",
            "type": "seminario",
          },
        ],
        "title": "Evitando el estado compartido y cambiante",
      },
      Object {
        "bonus": false,
        "description": "<p>Esta unidad es básicamente una sesión de programación por pares. La tarea a
realizar será refactorizar varias funciones de un videojuego existente haciendo
uso de <strong>funciones puras</strong> y <strong>estructuras inmutables</strong>. La duración estimada de
esta unidad es de <em>2h</em>.</p>
",
        "href": "02-workshop",
        "parts": Array [
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 0,
            "title": "Apertura",
            "type": "seminario",
          },
          Object {
            "duration": 90,
            "format": "self-paced",
            "order": 1,
            "title": "Implementación por pares",
            "type": "taller",
          },
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 2,
            "title": "Cierre",
            "type": "seminario",
          },
        ],
        "title": "Hacking: refactoring",
      },
      Object {
        "bonus": false,
        "description": "<p>Las <strong>funciones de orden superior</strong> (<em>Higher Order Functions</em> en inglés), no son
más que funciones que reciben otras funciones como argumentos o que retornan una
función. En esta unidad veremos este tipo de funciones en acción, incluyendo
usos más avanzados como <strong>aplicación parcial</strong> y <strong>currying</strong>.</p>
",
        "href": "03-hof",
        "parts": Array [
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 0,
            "title": "Apertura",
            "type": "seminario",
          },
          Object {
            "duration": 30,
            "format": "self-paced",
            "order": 1,
            "title": "Higher Order Functions",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 2,
            "title": "Ejercicios de HOF",
            "type": "practice",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 3,
            "title": "Aplicación parcial",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 4,
            "title": "Ejercicios de aplicación parcial",
            "type": "practice",
          },
          Object {
            "duration": 30,
            "format": "self-paced",
            "order": 5,
            "title": "Currying",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 6,
            "title": "Ejercicios de currying",
            "type": "practice",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 7,
            "title": "Cuestionario",
            "type": "quiz",
          },
          Object {
            "duration": 45,
            "format": "guiado",
            "order": 8,
            "title": "Solucionarios y ejercicios guiados",
            "type": "seminario",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 9,
            "title": "Cuestionario",
            "type": "quiz",
          },
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 10,
            "title": "Cierre",
            "type": "seminario",
          },
        ],
        "title": "Higher Order Functions",
      },
      Object {
        "bonus": false,
        "description": "<p>La duración estimada de esta unidad es de <em>2h</em>.</p>
",
        "href": "04-workshop",
        "parts": Array [
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 0,
            "title": "Apertura",
            "type": "seminario",
          },
          Object {
            "duration": 90,
            "format": "self-paced",
            "order": 1,
            "title": "Implementación por pares",
            "type": "taller",
          },
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 2,
            "title": "Cierre",
            "type": "seminario",
          },
        ],
        "title": "Hacking: refactoring",
      },
      Object {
        "bonus": false,
        "description": "<p>Como paradigma declarativo, la programación funcional se caracteriza, entre
otras cosas, por expresar &quot;repetición&quot; usando recursión en vez de iteración. En
esta unidad veremos cómo reemplazar iteración con recursión o higher order
functions, así como las ventajas que ofrece el enfoque funcional para manejar
asincronía, que es una característica fundamental de JavaScript.</p>
",
        "href": "05-flow-control",
        "parts": Array [
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 0,
            "title": "Apertura",
            "type": "seminario",
          },
          Object {
            "duration": 50,
            "format": "self-paced",
            "order": 1,
            "title": "Recursión",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 2,
            "title": "Ejercicios de recursión",
            "type": "practice",
          },
          Object {
            "duration": 30,
            "format": "self-paced",
            "order": 3,
            "title": "Asincronía",
            "type": "lectura",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 4,
            "title": "Ejercicios de asincronía",
            "type": "practice",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 5,
            "title": "Cuestionario",
            "type": "quiz",
          },
          Object {
            "duration": 45,
            "format": "guiado",
            "order": 6,
            "title": "Solucionarios y ejercicios guiados",
            "type": "seminario",
          },
          Object {
            "duration": 10,
            "format": "self-paced",
            "order": 7,
            "title": "Cuestionario",
            "type": "quiz",
          },
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 8,
            "title": "Cierre",
            "type": "seminario",
          },
        ],
        "title": "Control de flujo",
      },
      Object {
        "bonus": false,
        "description": "<p>La duración estimada de esta unidad es de <em>2h</em>.</p>
",
        "href": "06-workshop",
        "parts": Array [
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 0,
            "title": "Apertura",
            "type": "seminario",
          },
          Object {
            "duration": 90,
            "format": "self-paced",
            "order": 1,
            "title": "Implementación por pares",
            "type": "taller",
          },
          Object {
            "duration": 15,
            "format": "guiado",
            "order": 2,
            "title": "Cierre",
            "type": "seminario",
          },
        ],
        "title": "Hacking: reemplazando iteración con recursión",
      },
      Object {
        "bonus": false,
        "description": "<p>Cada equipo (dos alumnas) tendrá 5 minutos para presentar su demo. La duración
estimada de esta unidad es de <em>2h</em>.</p>
",
        "href": "07-demos",
        "parts": Array [],
        "title": "Code review + Demos de proyectos",
      },
    ],
    "tags": Object {
      "primary": Object {
        "es6": true,
        "functional": true,
      },
      "secondary": Object {},
    },
    "targetAudience": "<p>Este curso está dirigido a desarrolladoras tanto <em>front-end</em> como <em>back-end</em>.
JavaScript es un lenguaje de naturaleza funcional. En este curso aprenderás
sobre los principios de la programación funcional y cómo se reflejan en
JavaScript moderno.</p>
",
    "title": "Functional JavaScript",
  },
}
`;

exports[`Course(path, cb) should parse with target audience 1`] = `
Object {
  "primary": Object {
    "bar": true,
    "baz": true,
    "foo": true,
  },
  "secondary": Object {},
}
`;

exports[`Course(path, cb) should parse with target audience 2`] = `
"<p>Este curso está dirigido a desarrolladoras tanto <em>front-end</em> como <em>back-end</em>.
JavaScript es un lenguaje de naturaleza funcional. En este curso aprenderás
sobre los principios de la programación funcional y cómo se reflejan en
JavaScript moderno.</p>
"
`;

exports[`Course(path, cb) should read main and secondary tags 1`] = `
Object {
  "primary": Object {
    "bar": true,
    "baz": true,
    "foo": true,
  },
  "secondary": Object {
    "one": true,
    "three": true,
    "two": true,
  },
}
`;

exports[`Course(path, cb) should read primary (default) tags 1`] = `
Object {
  "primary": Object {
    "bar": true,
    "baz": true,
    "foo": true,
  },
  "secondary": Object {},
}
`;

exports[`Course(path, cb) should trim <hr> from html fragments 1`] = `
"<p>Cada equipo (dos alumnas) tendrá 5 minutos para presentar su demo. La duración
estimada de esta unidad es de <em>2h</em>.</p>
"
`;

exports[`Course(path, cb) should trim <hr> from html fragments 2`] = `
"<ul>
<li>Refactorizar juego usado en lección 9 usando principios de programación
funcional, ES6 y añadiendo un conjunto de pruebas.</li>
<li>El &quot;proyecto&quot; está basado en iterar una aplicación existente y llevar a cabo
su siguiente release usando metodología ágil.</li>
</ul>
"
`;
