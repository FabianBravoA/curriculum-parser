// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Common Common.parseReadme(data, metaKeys) should... 1`] = `
Object {
  "body": "<h3 id=\\"resumen\\">Resumen</h3>
<p>Llegamos al final de la unidad ;-)</p>
<p>En la programaci&#xF3;n funcional, las programadoras tienden a evitar dos h&#xE1;bitos
comunes en otros lenguajes:</p>
<ul>
<li><em>Mutaci&#xF3;n:</em> Cambio de los datos <em>in-situ</em> en vez de retornar un valor.</li>
<li><em>Estado compartido:</em> Contexto extra que no se provee como argumento a la
funci&#xF3;n, por ejemplo, variables globales.</li>
</ul>
<p>Al no depender del estado ni de las mutaciones, el comportamiento de cada
funci&#xF3;n est&#xE1; contenido. Por lo tanto, es m&#xE1;s sencillo realizar pruebas del
comportamiento de dichas funciones, entre otra serie de beneficios.</p>
<p>Una vez dicho todo esto, existen ocasiones donde el uso de funciones puras no es
posible, especialmente en funciones que emplean <em>side-effects</em> para llevar a
cabo su cometido, por ejemplo el uso de promesas en JavaScript. Pero este tema,
lo veremos en una siguiente lecci&#xF3;n.</p>
<h3 id=\\"respondamos-juntxs-las-preguntas-de-la-apertura\\">Respondamos juntxs las preguntas de la apertura</h3>
<ul>
<li>C&#xF3;mo evitar que nuestras funciones tengan efectos colaterales?</li>
<li>Por qu&#xE9; es beneficioso evitar el estado compartido?</li>
<li>Cu&#xE1;les son las ventajas que ofrecen las funciones puras, en particular a la
hora de hacer testing?</li>
<li>C&#xF3;mo evitar la mutaci&#xF3;n de objetos y arreglos?</li>
<li>Qu&#xE9; tipos de datos son mutables e inmutables en JavaScript?</li>
<li>C&#xF3;mo usar m&#xE9;todos de arreglos como <code>Array#concat</code>, <code>Array#slice</code>, <code>Array#map</code>,
<code>Array#filter</code>, ... para crear arreglos nuevos en vez de mutar (modificar)
valores existentes?</li>
<li>C&#xF3;mo usar m&#xE9;todos de objetos (por ejemplo <code>Object.assign()</code>) para copiar
propiedades y as&#xED; <em>clonar</em> objetos?</li>
<li>C&#xF3;mo usar el <em>spread operator</em> (<code>...</code>) para copiar objetos y arreglos?</li>
</ul>
<h3 id=\\"auto-evaluaci-n\\">Auto-evaluaci&#xF3;n</h3>
<p>Tus instructorxs te compartir&#xE1;n un link al cuestionario de <em>auto evaliaci&#xF3;n</em>.
Este cuestionario no es calificado.</p>
",
  "duration": "15min",
  "format": "guiado",
  "title": "Cierre",
  "type": "seminario",
}
`;
